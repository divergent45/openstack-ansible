---
## Debug and Verbose options.
debug: true

proxy_env_url: http://dcim:3128/
# no_proxy_env: "localhost,127.0.0.1,{{ internal_lb_vip_address }},{{ external_lb_vip_address }},{% for host in groups['all_containers'] %}{{ hostvars[host]['container_address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
no_proxy_env: "localhost,127.0.0.1,dcim,dcim2,10.0.0.12,10.0.0.13,10.0.0.33,10.0.0.34,10.0.2.15,{{ internal_lb_vip_address }},{{ external_lb_vip_address }},{% for host in groups['all_containers'] %}{{ hostvars[host]['container_address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
#no_proxy_env: "localhost,127.0.0.1,,10.0.0.*,10.0.0.0,10.0.1.0,10.0.2.0"
global_environment_variables:
   HTTP_PROXY: "{{ proxy_env_url }}"
   HTTPS_PROXY: "{{ proxy_env_url }}"
   NO_PROXY: "{{ no_proxy_env }}"
   http_proxy: "{{ proxy_env_url }}"
   https_proxy: "{{ proxy_env_url }}"
   no_proxy: "{{ no_proxy_env }}"
## SSH connection wait time
# If an increased delay for the ssh connection check is desired,
# uncomment this variable and set it appropriately.   
ssh_delay: 15
#++++++++++++++++++Must for Self signed Certificate++++++++++++++++
keystone_service_adminuri_insecure: true
keystone_service_internaluri_insecure: true

#++++++++++++++++++++++++++++++++++++++
haproxy_ssl_self_signed_regen: true
haproxy_ssl_self_signed_subject: "/C=IN/ST=Karnataka/L=Bangalore/O=ITC/CN=cloudspace.itc.in"


#+++++++++++++++++Proxying TLS traffic often interferes with the clients ability to perform 
#successful validation of the certificate chain.Additional variables may exist
#within the project and will be named using the *_validate_certs pattern
pip_validate_certs: false
galera_package_download_validate_certs: false


glance_default_store: rbd
# glance_default_store: file

## Ceph pool name for Glance to use
glance_rbd_store_pool: images
glance_rbd_store_chunk_size: 8

cinder_service_backup_program_enabled: True
cinder_service_backup_driver: cinder.backup.drivers.ceph
cinder_service_backup_ceph_user: cinder-backup
cinder_service_backup_ceph_pool: backups


haproxy_keepalived_external_vip_cidr: 14.142.104.140/29
haproxy_keepalived_internal_vip_cidr: 10.0.0.14/24
haproxy_keepalived_external_interface: br-internet
haproxy_keepalived_internal_interface: br-mgmt
keepalived_ping_address: "10.0.0.53"

cephx: true
ceph_mons:
   - 10.0.2.81
   - 10.0.2.82
   - 10.0.2.83
## Common Nova Overrides
# When nova_libvirt_images_rbd_pool is defined, ceph will be installed on nova
# hosts.
nova_libvirt_images_rbd_pool: vms

##Most often, overrides are implemented 
##for the <service>.conf files (for example, nova.conf). These files use a standard INI file format.
##
#
#nova_nova_conf_overrides:
#  DEFAULT:
#    remove_unused_original_minimum_age_seconds: 43200
#  libvirt:
#    cpu_mode: host-model
#    disk_cachemodes: file=directsync,block=none
#  database:
#    idle_timeout: 300
#    max_pool_size: 10




## Common Glance Overrides
# Set glance_default_store to "swift" if using Cloud Files backend
# or "rbd" if using ceph backend; the latter will trigger ceph to get
# installed on glance. If using a file store, a shared file store is
# recommended. See the OpenStack-Ansible install guide and the OpenStack
# documentation for more details.
# Note that "swift" is automatically set as the default back-end if there
# are any swift hosts in the environment. Use this setting to override
# this automation if you wish for a different default back-end.
# glance_default_store: file

## Ceph pool name for Glance to use
# glance_rbd_store_pool: images
# glance_rbd_store_chunk_size: 8






## Common Nova Overrides
# When nova_libvirt_images_rbd_pool is defined, ceph will be installed on nova
# hosts.
# nova_libvirt_images_rbd_pool: vms

# If you wish to change the dhcp_domain configured for both nova and neutron
# dhcp_domain: openstacklocal

## Common Glance Overrides when using a Swift back-end
# By default when 'glance_default_store' is set to 'swift' the playbooks will
# expect to use the Swift back-end that is configured in the same inventory.
# If the Swift back-end is not in the same inventory (ie it is already setup
# through some other means) then these settings should be used.
#
# NOTE: Ensure that the auth version matches your authentication endpoint.
#
# NOTE: If the password for glance_swift_store_key contains a dollar sign ($),
# it must be escaped with an additional dollar sign ($$), not a backslash. For
# example, a password of "super$ecure" would need to be entered as
# "super$$ecure" below.  See Launchpad Bug #1259729 for more details.
#
# glance_swift_store_auth_version: 3
# glance_swift_store_auth_address: "https://some.auth.url.com"
# glance_swift_store_user: "OPENSTACK_TENANT_ID:OPENSTACK_USER_NAME"
# glance_swift_store_key: "OPENSTACK_USER_PASSWORD"
# glance_swift_store_container: "NAME_OF_SWIFT_CONTAINER"
# glance_swift_store_region: "NAME_OF_REGION"

## Common Ceph Overrides
# ceph_mons:
#   - 10.16.5.40
#   - 10.16.5.41
#   - 10.16.5.42

## Custom Ceph Configuration File (ceph.conf)
# By default, your deployment host will connect to one of the mons defined above to
# obtain a copy of your cluster's ceph.conf.  If you prefer, uncomment ceph_conf_file
# and customise to avoid ceph.conf being copied from a mon.
#ceph_conf_file: |
#  [global]
#  fsid = 00000000-1111-2222-3333-444444444444
#  mon_initial_members = mon1.example.local,mon2.example.local,mon3.example.local
#  mon_host = 10.16.5.40,10.16.5.41,10.16.5.42
#  # optionally, you can use this construct to avoid defining this list twice:
#  # mon_host = {{ ceph_mons|join(',') }}
#  auth_cluster_required = cephx
#  auth_service_required = cephx


# By default, openstack-ansible configures all OpenStack services to talk to
# RabbitMQ over encrypted connections on port 5671. To opt-out of this default,
# set the rabbitmq_use_ssl variable to 'false'. The default setting of 'true'
# is highly recommended for securing the contents of RabbitMQ messages.
# rabbitmq_use_ssl: false

# RabbitMQ management plugin is enabled by default, the guest user has been
# removed for security reasons and a new userid 'monitoring' has been created
# with the 'monitoring' user tag. In order to modify the userid, uncomment the
# following and change 'monitoring' to your userid of choice.
# rabbitmq_monitoring_userid: monitoring


## Additional pinning generator that will allow for more packages to be pinned as you see fit.
## All pins allow for package and versions to be defined. Be careful using this as versions
## are always subject to change and updates regarding security will become your problem from this
## point on. Pinning can be done based on a package version, release, or origin. Use "*" in the
## package name to indicate that you want to pin all package to a particular constraint.
# apt_pinned_packages:
#   - { package: "lxc", version: "1.0.7-0ubuntu0.1" }
#   - { package: "libvirt-bin", version: "1.2.2-0ubuntu13.1.9" }
#   - { package: "rabbitmq-server", origin: "www.rabbitmq.com" }
#   - { package: "*", release: "MariaDB" }


## Environment variable settings
# This allows users to specify the additional environment variables to be set
# which is useful in setting where you working behind a proxy. If working behind
# a proxy It's important to always specify the scheme as "http://". This is what
# the underlying python libraries will handle best. This proxy information will be
# placed both on the hosts and inside the containers.

## Example environment variable setup:
# proxy_env_url: http://username:pa$$w0rd@10.10.10.9:9000/
# no_proxy_env: "localhost,127.0.0.1,{{ internal_lb_vip_address }},{{ external_lb_vip_address }},{% for host in groups['all_containers'] %}{{ hostvars[host]['container_address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
# global_environment_variables:
#   HTTP_PROXY: "{{ proxy_env_url }}"
#   HTTPS_PROXY: "{{ proxy_env_url }}"
#   NO_PROXY: "{{ no_proxy_env }}"
#   http_proxy: "{{ proxy_env_url }}"
#   https_proxy: "{{ proxy_env_url }}"
#   no_proxy: "{{ no_proxy_env }}"




## HAProxy
# Uncomment this to disable keepalived installation (cf. documentation)
# haproxy_use_keepalived: False
#
# HAProxy Keepalived configuration (cf. documentation)
# Make sure that this is set correctly according to the CIDR used for your
# internal and external addresses.
# haproxy_keepalived_external_vip_cidr: "{{external_lb_vip_address}}/32"
# haproxy_keepalived_internal_vip_cidr: "{{internal_lb_vip_address}}/32"
# haproxy_keepalived_external_interface:
# haproxy_keepalived_internal_interface:

# Defines the default VRRP id used for keepalived with haproxy.
# Overwrite it to your value to make sure you don't overlap
# with existing VRRPs id on your network. Default is 10 for the external and 11 for the
# internal VRRPs
# haproxy_keepalived_external_virtual_router_id:
# haproxy_keepalived_internal_virtual_router_id:

# Defines the VRRP master/backup priority. Defaults respectively to 100 and 20
# haproxy_keepalived_priority_master:
# haproxy_keepalived_priority_backup:

# Keepalived default IP address used to check its alive status (IPv4 only)
# keepalived_ping_address: "193.0.14.129"

# All the previous variables are used in a var file, fed to the keepalived role.
# To use another file to feed the role, override the following var:
# haproxy_keepalived_vars_file: 'vars/configs/keepalived_haproxy.yml'
## Load Balancer Configuration (haproxy/keepalived)
#haproxy_keepalived_external_vip_cidr: "10.0.0.0/24"
#haproxy_keepalived_internal_vip_cidr: "10.1.0.0/24"
#haproxy_keepalived_external_interface: br-flat
#haproxy_keepalived_internal_interface: br-mgmt
## Host security hardening
# The openstack-ansible-security role provides security hardening for hosts
# by applying security configurations from the STIG. Hardening is disabled by
# default, but an option to opt-in is available by setting the following
# variable to 'true'.
# Docs: http://docs.openstack.org/developer/openstack-ansible-security/
# apply_security_hardening: true

#=======================================================================================
#haproxy_ssl_self_signed_subject: "/C=US/ST=Texas/L=San Antonio/O=IT/CN=haproxy.example.com"
#horizon_ssl_self_signed_regen: true
#rabbitmq_user_ssl_cert:    /tmp/example.com.crt
#rabbitmq_user_ssl_key:     /tmp/example.com.key
#rabbitmq_user_ssl_ca_cert: /tmp/ExampleCA.crt

#+++++++++++++++++++++if hardeing of servers are to be avoided++++++++++++++++++++++++++++++++
#apply_security_hardening: false

##The general format for the variable names used for overrides is
# <service>_<filename>_<file extension>_overrides. 
# For example, the variable name used in these examples to add parameters to the nova.conf file
#  is nova_nova_conf_overrides.
##
#

#The general format for the variable 
#names used for overrides is <service>_<filename>_<file extension>_overrides. 
#For example, the variable name used in this example to define a meter exclusion 
#in the pipeline.yml file for the Telemetry service (ceilometer) 
#is ceilometer_pipeline_yaml_overrides.
#http://docs.openstack.org/project-deploy-guide/openstack-ansible/newton/app-advanced-config-override.html#overriding-json-files

#Use this method for any files with the INI format for in OpenStack projects deployed in OpenStack-Ansible.
#++++++++++++++++++++++++Disableing Horizon SSL and CSRF ++++++++++++++++++++++++++++++++=

#check the horizon configurationfile name ??????????????????????????????????????
#SECURE_PROXY_SSL_HEADER: false
#CSRF_COOKIE_SECURE: false
#SESSION_COOKIE_SECURE: false
#DEBUG: True
#TEMPLATE_DEBUG: True







#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2
#
#Galera:
#
#        galera_client_my_cnf_overrides
#        galera_my_cnf_overrides
#        galera_cluster_cnf_overrides
#        galera_debian_cnf_overrides
#
#Telemetry service (ceilometer):
#
#        ceilometer_policy_overrides
#        ceilometer_ceilometer_conf_overrides
#        ceilometer_api_paste_ini_overrides
#        ceilometer_event_definitions_yaml_overrides
#        ceilometer_event_pipeline_yaml_overrides
#        ceilometer_pipeline_yaml_overrides
#
#Block Storage (cinder):
#
#        cinder_policy_overrides
#        cinder_rootwrap_conf_overrides
#        cinder_api_paste_ini_overrides
#        cinder_cinder_conf_overrides
#
#Image service (glance):
#
#        glance_glance_api_paste_ini_overrides
#        glance_glance_api_conf_overrides
#        glance_glance_cache_conf_overrides
#        glance_glance_manage_conf_overrides
#        glance_glance_registry_paste_ini_overrides
#        glance_glance_registry_conf_overrides
#        glance_glance_scrubber_conf_overrides
#        glance_glance_scheme_json_overrides
#        glance_policy_overrides
#
#Orchestration service (heat):
#
#        heat_heat_conf_overrides
#        heat_api_paste_ini_overrides
#        heat_default_yaml_overrides
#        heat_aws_cloudwatch_alarm_yaml_overrides
#        heat_aws_rds_dbinstance_yaml_overrides
#        heat_policy_overrides
#
#Identity service (keystone):
#
#        keystone_keystone_conf_overrides
#        keystone_keystone_default_conf_overrides
#        keystone_keystone_paste_ini_overrides
#        keystone_policy_overrides
#
#Networking service (neutron):
#
#        neutron_neutron_conf_overrides
#        neutron_ml2_conf_ini_overrides
#        neutron_dhcp_agent_ini_overrides
#        neutron_api_paste_ini_overrides
#        neutron_rootwrap_conf_overrides
#        neutron_policy_overrides
#        neutron_dnsmasq_neutron_conf_overrides
#        neutron_l3_agent_ini_overrides
#        neutron_metadata_agent_ini_overrides
#        neutron_metering_agent_ini_overrides
#
#Compute service (nova):
#
#        nova_nova_conf_overrides
#        nova_rootwrap_conf_overrides
#        nova_api_paste_ini_overrides
#        nova_policy_overrides
#
#Object Storage service (swift):
#
#        swift_swift_conf_overrides
#        swift_swift_dispersion_conf_overrides
#        swift_proxy_server_conf_overrides
#        swift_account_server_conf_overrides
#        swift_account_server_replicator_conf_overrides
#        swift_container_server_conf_overrides
#        swift_container_server_replicator_conf_overrides
#        swift_object_server_conf_overrides
#        swift_object_server_replicator_conf_overrides
#
#Tempest:
#
#        tempest_tempest_conf_overrides
#
#pip:
#
#        pip_global_conf_overrides



#A work around for this issue if you are using Squid for your proxy server is to adjust your Squid configuration to remove the line:
#
#"http_access deny CONNECT !SSL_ports"
#
#Once you've done so, the proxy lib upon which the Ansible uri module depends will be able to use the HTTP CONNECT method against your proxy
#
##



# # List all existing tags.
# git tag -l

# # Checkout the stable branch and find just the latest tag
# git checkout stable/newton
# git describe --abbrev=0 --tags

# # Checkout the latest tag from either method of retrieving the tag.
# git checkout 15.0.0.0b3



#/etc/glance/glance-api.conf
#In the [glance_store] section, configure the local file system store and location of image files:
#
#[glance_store]
#...
#stores = file,http
#default_store = file
#filesystem_store_datadir = /var/lib/glance/images/


#/etc/openstack-dashboard/local_settings.py



#Deploy OpenStack using OpenStack-Ansible
#
#    If SSH on the hosts are configured with a port other than port 22, this ~/.ssh/config must be used on the deployment host. Replace all fields containining < > and <SSH-PORT> sections
#
#    Host 172.29.236.<IP-RANGE-HERE>?
#        User root
#        Port <SSH-PORT>
#
#    Host 172.29.236.<INDIVIDUAL-IP-HOST-HERE>
#            User root
#            Port <SSH-PORT>
#
#    Host *
#            User root
#            Port 22

#percona_package_download_validate_certs: yes
#galera_ignore_cluster_state: false



